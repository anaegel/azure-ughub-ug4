# Starter pipeline
# https://aka.ms/yaml

trigger:
- master

variables:
  MY_CC: '/usr/bin/clang'
  MY_CXX: '/usr/bin/clang++'


stages:
- stage: UGHubInstall
  displayName: 'Install via UGhub'
  jobs: 
  - job: UGHubDownload
    displayName: 'Download'
    strategy:
      matrix:
        linux:
          imageName: "ubuntu-latest"
        mac:
          imageName: "macos-10.13"
        windows:
          imageName: "vs2017-win2016"
      maxParallel: 3
    pool:
      vmImage: $(imageName)
      
    steps:
    - script: |
        which "$(MY_CXX)"
        mkdir "$(System.DefaultWorkingDirectory)/ug4-clone"; 
        cd "$(System.DefaultWorkingDirectory)/ug4-clone";
        git clone https://www.github.com/UG4/ughub
        echo Installed 'ughub'.
        export UG4_FOLDER_SURVIVED_CACHE=false
        if [ -e ug4 ]; then export UG4_FOLDER_SURVIVED_CACHE=true; fi
        if [[ "$UG4_FOLDER_SURVIVED_CACHE" == "false" ]]; then mkdir ug4; fi
        cd ug4
        if [[ "$UG4_FOLDER_SURVIVED_CACHE" == "false" ]]; then ../ughub/ughub init .; fi
        if [[ "$UG4_FOLDER_SURVIVED_CACHE" == "false" ]]; then ../ughub/ughub install ugcore; fi
        if [[ "$UG4_FOLDER_SURVIVED_CACHE" == "false" ]]; then rm -rf ugcore; fi
        ../ughub/ughub install ConvectionDiffusion
        echo "Installed UG4 via ughub"
        
    - script: |
        which "$(MY_CXX)"
        cd "$(System.DefaultWorkingDirectory)/ug4-clone/ug4";
        mkdir build; cd build
        ls -l ..;
        cmake .. -DCMAKE_CXX_COMPILER"=$(MY_CXX)" -DCMAKE_C_COMPILER="$(MY_CC)" -DPARALLEL=OFF
        make -j 16;
        
      timeoutInMinutes: 300 
  
  - job: UGCompile
    displayName: 'Compiling'
    dependsOn: UGHubDownload
    pool:
      vmImage: 'ubuntu-latest' 
      strategy:
        matrix:
          Clang-6 Debug:
            CC: 'clang'
            CXX: 'clang++'
            BuildType: Debug
            SelfHost: false
            CMakeArgs: ''

          GCC-7 Debug:
            CC: 'gcc'
            CXX: 'g++'
            BuildType: Debug
            SelfHost: false
            CMakeArgs: ''

    steps:
    - script: ls -l
  
  
  
- stage: SecondStage
  displayName: 'Compile UG4'
  dependsOn: UGHubInstall
  jobs: 
  - job: UGCompile
    steps:
    - script: ls -l
     
    
 
 
